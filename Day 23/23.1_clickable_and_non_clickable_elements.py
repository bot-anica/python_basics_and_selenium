# ---------- КЛИКАБИЛЬНЫЕ И НЕКЛИКАБИЛЬНЫЕ ЭЛЕМЕНТЫ
print("----- КЛИКАБИЛЬНЫЕ И НЕКЛИКАБИЛЬНЫЕ ЭЛЕМЕНТЫ -----")


# Нажатие на элемент производится с помощью метода click()
# Пример: element.click()


# Кликабельные элементы

# a - гиперссылки
# button - кнопки
# input - поле ввода типа "button", "submit", "reset", "file"
# select - выпадающие списки
# textarea - поле для многострочного ввода
# label - метки, которые ассоциируются с элементами формы
# other - другие элементы, на которых весит событие клика


# Эти же элементы могут быть некликабельными в таких случаях:

# 1. Элемент не виден (display: none, visibility: hidden)
# 2. Элемент неактивен (disabled)
# 3. Элемент заблокирован другим элементом, например контент страницы перекрыт фоном модального окна
# 4. Элемент ещё не загружен
# 5. Элемент находится вне области просмотра, например в случае ленивой подгрузки
# 6. Псевдоэлемент (пример: `::before` или `::after`)

# Чтобы исправить эти проблемы, мы можем:

# - Использовать явные ожидания для ожидания кликабельности элемента (WebDriverWait и expected_conditions)
# - Прокрутить до элемента с помощью метода scrollIntoView() или execute_script() в Selenium
# - Использовать JavaScript в execute_script() в случаях, когда стандартный клик не работает
# - Убедиться, что никакие другие элементы не перекрывают целевой элемент на момент клика
# - Проверить, что элемент не имеет CSS свойств, которые могут блокировать клик, или что он не является псевдоэлементом


# В случае попытки клика по некликабельному элементу,
# Selenium вызовет исключение ElementNotInteractableException
